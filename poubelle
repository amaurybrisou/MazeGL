(function(){
    //load Builders
    var f = function(){
            if(typeof mmo == "undefined"){
                Logger.log("Namespace mmo not Loaded", this);
                return false;
            } else if(typeof mmo.Avatar == "undefined"){
                console.log("Namespace mmo Altered", this);
                return false;
            }
            return true;
        };

        if (!f()){
            return;
        }

})();


mmo.Avatar.FirstAvatar = function(material, x, y, z, config, model_path){
    THREE.Mesh.call(this);

    this.setGeometry( new THREE.CubeGeometry( 20, 20, 20 ) );
    console.log(material);
    this.setMaterial( new  THREE.MeshNormalMaterial()  );
    model_path = null;

    this.position.y = 0;
    this.position.x = 0;
    this.positionz = 0;

    var that = this;
    // update
    this.update = function(x, y, z, vertices, scale, t){

      that.x = x;
      that.y = 0;
      that.z = z;

      //baseGPoint
      vertices[vertices.length-1].x = that.baseGPoint.x + that.x;
      vertices[vertices.length-1].y = that.baseGPoint.y + that.y;
      vertices[vertices.length-1].z = that.baseGPoint.z + that.z;

      that.atom.position.set(vertices[vertices.length-1].x + Math.cos(t/600)*that.scale*1.5,
                             vertices[vertices.length-1].y + Math.cos(t/600)*that.scale*1.5,
                             vertices[vertices.length-1].z + Math.cos(t/600)*that.scale*1.5);


      // nodesBalls
      for(var i=0; i<vertices.length-1; i++){
        that.nodesBalls[i].position.set(vertices[i].x+that.x,vertices[i].y+that.y,vertices[i].z+that.z);
      }

    }

    //this.meshControls = new THREE.FirstPersonControls( that, 100 );

    //this.meshControls = new THREE.FirstPersonControls( this.mesh, 100 );

    /*this.meshControls.movementSpeed = config.TRANS_VIEW_INCREMENT;
    this.meshControls.lookSpeed = config.ROT_VIEW_INCREMENT;
    this.meshControls.noFly = config.NO_FLY;
    this.meshControls.lookVertical = config.lookVertical;*/

    config.camera.position.set(this.position.x, this.position.y, this.position.z);
    //config.camera.position.set(this.mesh.position.x, this.mesh.position.y, this.mesh.position.z);
    config.camera.lookAt(this.position);

    //config.camera.lookAt(this.mesh.position);

    config.camera.position.x += 0;
    config.camera.position.y += this.scale;
    config.camera.position.z += this.scale * 4;

    this.add(config.camera);
    //this.mesh.add(config.camera);

}

mmo.Avatar.FirstAvatar.prototype = Object.create(THREE.Mesh.prototype);








        // SHADER
        
        
        window.mmo.Attributes.Stone = {
            displacement : {
                type : 'f', // a float
                value : [] // an empty array
            }
        }
        
        
        stoneAttributes[i] = {
            displacement: window.mmo.Attributes.Stone.displacement
        };
        stoneValues[i] = stoneAttributes[i].displacement.value;

        stoneShaderMaterial[i] = new window.THREE.ShaderMaterial({
            uniforms:       window.mmo.UNIFORMS,
            attributes:     stoneAttributes[i],
            vertexShader:   document.getElementById('stonevertexshader').textContent,
            fragmentShader: document.getElementById('stonefragmentshader').textContent
        });
        
        
        // UPDATE
        var vertices = stones[i].geometry.vertices;
        for(var v = 0; v < vertices.length; v++) {
              stoneValues[i] = Math.random() * 300;
        }
        vertices.clear;