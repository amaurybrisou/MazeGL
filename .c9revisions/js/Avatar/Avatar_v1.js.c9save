{"ts":1369815374646,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"(function(){\n    //load Builders \n    var f = function(){\n        if(typeof mmo == \"undefined\"){\n            Logger.log(\"Namespace mmo not Loaded\", this);\n            return false;\n        } else if(typeof mmo.Avatar == \"undefined\"){\n            console.log(\"Namespace mmo Altered\", this);\n            return false;\n        }   \n        return true;\n    };\n\n    if (!f()){\n        return;\n    }\n})();\n\n\nmmo.Avatar.Avatar_v1 = function(meshMat, x, y, z, model_path){\n    \n    model_path = null;\n    \n    var that = this;\n\n    this.scale = 20;\n    this.side = function(){\n        return this.scale/2 + Math.random()*this.scale/2;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n    this.vertices = new Array();\n    this.faces = new Array();\n    this.nodesBalls = new Array();\n\n    this.meshMat = meshMat;\n\n    this.baseGPoint = new THREE.Vector3(0,0,0);\n    this.GPoint = new THREE.Vector3(0,0,0);\n\n    var atomMat = new THREE.MeshBasicMaterial({\n          color: 0xFF0000,\n          shading: THREE.NoShading //SmoothShading FlatShading NoShading\n        });\n\n    this.atom = new THREE.Mesh(               //MESH\n          new THREE.SphereGeometry(1),\n          atomMat  \n        );\n\n    this.geom = new THREE.Geometry(); \n\n\n    // create vertices\n    this.vertices[0] = new THREE.Vector3(0,0,0);\n    this.vertices[1] = new THREE.Vector3(this.side(),0,this.side()/2);\n    this.vertices[2] = new THREE.Vector3(this.side()/2,0,this.side());\n    this.vertices[3] = new THREE.Vector3(this.side()/2,this.side()/2,this.side()/2);\n\n    this.atom.position.set(this.vertices[0].position);\n\n\n    // create nodesBalls\n    for(var i=0; i<this.vertices.length; i++){\n\n        var ballMat = new THREE.MeshBasicMaterial({\n          color: 0,\n          shading: THREE.NoShading //SmoothShading FlatShading NoShading\n        });\n\n        ballMat.color.setRGB(i/this.vertices.length,i/this.vertices.length,i/this.vertices.length);\n\n        var ball = new THREE.Mesh(               //MESH\n          new THREE.SphereGeometry(0.5),\n          ballMat  \n        );\n\n        this.nodesBalls[i] = ball;\n        this.nodesBalls[i].position.set(this.vertices[i].x,this.vertices[i].y,this.vertices[i].z);\n\n        this.geom.vertices.push(this.vertices[i]);\n    };\n\n\n\n    this.geom.faces.push( new THREE.Face3( 0, 1, 2 ) );\n    this.geom.faces.push( new THREE.Face3( 0, 3, 1 ) );\n    this.geom.faces.push( new THREE.Face3( 0, 2, 3 ) );\n    this.geom.faces.push( new THREE.Face3( 3, 2, 1 ) );\n    \n    // CREATE AVATAR MESH\n    this.mesh = new THREE.Mesh( \n\n      this.geom, \n      this.meshMat \n    );\n\n    for(i=0; i<this.nodesBalls.length; i++){\n        this.nodesBalls[i].position.x += this.x;\n        this.nodesBalls[i].position.y += this.y;\n        this.nodesBalls[i].position.z += this.z;\n      }\n    this.mesh.position.set(this.x,this.y, this.z);\n\n    this.mesh.castShadow = true;\n\n\n\n    // calcul GPoint\n    for(var i=0; i<3; i++){\n        this.baseGPoint.x += this.vertices[i].x;\n        this.baseGPoint.y += this.vertices[i].y;\n        this.baseGPoint.z += this.vertices[i].z;\n    }\n\n    this.baseGPoint.multiplyScalar(1/3);\n    this.vertices.push(this.baseGPoint);\n    \n\n    // COMPUTE \n    this.geom.computeFaceNormals();\n    this.geom.mergeVertices();\n\n    // update\n    this.update = function(x, y, z, vertices, scale, t){\n      \n      that.x = x;\n      that.y = 0;\n      that.z = z;\n      \n      //baseGPoint \n      vertices[vertices.length-1].x = that.baseGPoint.x + that.x;\n      vertices[vertices.length-1].y = that.baseGPoint.y + that.y;\n      vertices[vertices.length-1].z = that.baseGPoint.z + that.z;\n\n      that.atom.position.set(vertices[vertices.length-1].x + Math.cos(t/600)*that.scale*1.5,\n                             vertices[vertices.length-1].y + Math.cos(t/600)*that.scale*1.5,\n                             vertices[vertices.length-1].z + Math.cos(t/600)*that.scale*1.5);\n      \n\n      // nodesBalls\n      for(var i=0; i<vertices.length-1; i++){\n        that.nodesBalls[i].position.set(vertices[i].x+that.x,vertices[i].y+that.y,vertices[i].z+that.z);\n        //that.nodesBalls[i].position.set(Math.sin(t/600)+that.baseGPoint.x,Math.sin(t/600),Math.sin(t/600)+that.baseGPoint.z);\n      }\n\n    }\n    \n    \n    this.meshControls = new THREE.FirstPersonControls( this.mesh, 100 );\n\n    this.meshControls.movementSpeed = TRANS_VIEW_INCREMENT;\n    this.meshControls.lookSpeed = ROT_VIEW_INCREMENT;\n    this.meshControls.noFly = true;\n    this.meshControls.lookVertical = true;\n    \n    camera.position.set(this.mesh.position.x, this.mesh.position.y, this.mesh.position.z);\n    camera.lookAt(this.mesh.position);\n\n    camera.position.x += 0;\n    camera.position.y += this.scale;\n    camera.position.z += this.scale * 4;\n\n}"]],"start1":0,"start2":0,"length1":0,"length2":4724}]],"length":4724}
{"contributors":[],"silentsave":false,"ts":1369815632436,"patch":[[{"diffs":[[0,"(typeof "],[1,"window."],[0,"mmo == \""]],"start1":68,"start2":68,"length1":16,"length2":23},{"diffs":[[0,"        "],[1,"window."],[0,"Logger.l"]],"start1":108,"start2":108,"length1":16,"length2":23},{"diffs":[[0,".Logger.log("],[1,"window.Level.CRITICAL, "],[0,"\"Namespace m"]],"start1":122,"start2":122,"length1":24,"length2":47},{"diffs":[[0,"(typeof "],[1,"window."],[0,"mmo.Avat"]],"start1":235,"start2":235,"length1":16,"length2":23},{"diffs":[[0,"ole.log("],[1,"window.Level.CRITICAL, "],[0,"\"Namespa"]],"start1":294,"start2":294,"length1":16,"length2":39},{"diffs":[[0,"})();\n\n\n"],[1,"window."],[0,"mmo.Avat"]],"start1":462,"start2":462,"length1":16,"length2":23}]],"length":4798,"saved":false}
{"contributors":[],"silentsave":false,"ts":1369827808401,"patch":[[{"diffs":[[0,"    "],[-1,"console"],[1,"window.Logger"],[0,".log"]],"start1":286,"start2":286,"length1":15,"length2":21}]],"length":4804,"saved":false}
{"ts":1369827825407,"patch":[[{"diffs":[[0,"ot Loaded\", "],[-1,"this"],[1,"\"Avatar_v1.js\""],[0,");\n         "]],"start1":173,"start2":173,"length1":28,"length2":38},{"diffs":[[0,"tered\", "],[-1,"this"],[1,"\"Avatar_v1.js\""],[0,");\n     "]],"start1":358,"start2":358,"length1":20,"length2":30}]],"length":4824,"saved":false}
