{"ts":1369601145356,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1369601151554,"patch":[[{"diffs":[[1,"(function(){\n    //load Builders\n    var f = function(){\n            if(typeof mmo == \"undefined\"){\n                Logger.log(\"Namespace mmo not Loaded\", this);\n                return false;\n            } else if(typeof mmo.Avatar == \"undefined\"){\n                console.log(\"Namespace mmo Altered\", this);\n                return false;\n            }\n            return true;\n        };\n\n        if (!f()){\n            return;\n        }\n\n})();\n\n\nmmo.Avatar.FirstAvatar = function(material, x, y, z, config, model_path){\n    THREE.Mesh.call(this);\n\n    this.setGeometry( new THREE.CubeGeometry( 20, 20, 20 ) );\n    console.log(material);\n    this.setMaterial( new  THREE.MeshNormalMaterial()  );\n    model_path = null;\n\n    this.position.y = 0;\n    this.position.x = 0;\n    this.positionz = 0;\n\n    var that = this;\n    // update\n    this.update = function(x, y, z, vertices, scale, t){\n\n      that.x = x;\n      that.y = 0;\n      that.z = z;\n\n      //baseGPoint\n      vertices[vertices.length-1].x = that.baseGPoint.x + that.x;\n      vertices[vertices.length-1].y = that.baseGPoint.y + that.y;\n      vertices[vertices.length-1].z = that.baseGPoint.z + that.z;\n\n      that.atom.position.set(vertices[vertices.length-1].x + Math.cos(t/600)*that.scale*1.5,\n                             vertices[vertices.length-1].y + Math.cos(t/600)*that.scale*1.5,\n                             vertices[vertices.length-1].z + Math.cos(t/600)*that.scale*1.5);\n\n\n      // nodesBalls\n      for(var i=0; i<vertices.length-1; i++){\n        that.nodesBalls[i].position.set(vertices[i].x+that.x,vertices[i].y+that.y,vertices[i].z+that.z);\n      }\n\n    }\n\n    //this.meshControls = new THREE.FirstPersonControls( that, 100 );\n\n    //this.meshControls = new THREE.FirstPersonControls( this.mesh, 100 );\n\n    /*this.meshControls.movementSpeed = config.TRANS_VIEW_INCREMENT;\n    this.meshControls.lookSpeed = config.ROT_VIEW_INCREMENT;\n    this.meshControls.noFly = config.NO_FLY;\n    this.meshControls.lookVertical = config.lookVertical;*/\n\n    config.camera.position.set(this.position.x, this.position.y, this.position.z);\n    //config.camera.position.set(this.mesh.position.x, this.mesh.position.y, this.mesh.position.z);\n    config.camera.lookAt(this.position);\n\n    //config.camera.lookAt(this.mesh.position);\n\n    config.camera.position.x += 0;\n    config.camera.position.y += this.scale;\n    config.camera.position.z += this.scale * 4;\n\n    this.add(config.camera);\n    //this.mesh.add(config.camera);\n\n}\n\nmmo.Avatar.FirstAvatar.prototype = Object.create(THREE.Mesh.prototype);"]],"start1":0,"start2":0,"length1":0,"length2":2556}]],"length":2556,"saved":false}
{"contributors":[],"silentsave":false,"ts":1369823302123,"patch":[[{"diffs":[[0,"totype);"],[1,"\n\n\n\n\n\n\n        // SHADER\n        stoneAttributes[i] = {\n            displacement: window.mmo.Attributes.Stone.displacement\n        };\n        stoneValues[i] = stoneAttributes[i].displacement.value;\n\n        stoneShaderMaterial[i] = new window.THREE.ShaderMaterial({\n            uniforms:       window.mmo.UNIFORMS,\n            attributes:     stoneAttributes[i],\n            vertexShader:   document.getElementById('stonevertexshader').textContent,\n            fragmentShader: document.getElementById('stonefragmentshader').textContent\n        });"]],"start1":2548,"start2":2548,"length1":8,"length2":555}]],"length":3103,"saved":false}
{"contributors":[],"silentsave":false,"ts":1369823322182,"patch":[[{"diffs":[[0,";\n\n\n\n\n\n\n"],[1,"\n\n"],[0,"        "]],"start1":2555,"start2":2555,"length1":16,"length2":18},{"diffs":[[0," SHADER\n"],[1,"        window.mmo.Attributes.Stone = {\n        displacement : {\n            type : 'f', // a float\n            value : [] // an empty array\n        }\n    }\n        \n        \n"],[0,"        "]],"start1":2575,"start2":2575,"length1":16,"length2":191}]],"length":3280,"saved":false}
{"ts":1369823360933,"patch":[[{"diffs":[[0,"     });"],[1,"\n        \n        \n                // UPDATE\n        var vertices = stones[i].geometry.vertices;\n        for(var v = 0; v < vertices.length; v++) {\n              stoneValues[i] = Math.random() * 300;\n        }\n        vertices.clear;"]],"start1":3272,"start2":3272,"length1":8,"length2":241}]],"length":3513,"saved":false}
{"ts":1369823362644,"patch":[[{"diffs":[[0," SHADER\n"],[1,"        \n        \n"],[0,"        "]],"start1":2575,"start2":2575,"length1":16,"length2":34}]],"length":3531,"saved":false}
{"ts":1369823367256,"patch":[[{"diffs":[[0,"one = {\n        "],[1,"    "],[0,"displacement : {"]],"start1":2633,"start2":2633,"length1":32,"length2":36},{"diffs":[[0,"ent : {\n"],[1,"    "],[0,"        "]],"start1":2662,"start2":2662,"length1":16,"length2":20},{"diffs":[[0,"        "],[1,"  "],[1,"  "],[0,"value : "]],"start1":2713,"start2":2713,"length1":16,"length2":20},{"diffs":[[0,"ray\n        "],[-1,"}\n"],[1,"    }\n    "],[0,"    }\n      "]],"start1":2750,"start2":2750,"length1":26,"length2":34}]],"length":3551,"saved":false}
{"ts":1369823371259,"patch":[[{"diffs":[[0,"       \n"],[-1,"        "],[0,"        "]],"start1":3329,"start2":3329,"length1":24,"length2":16}]],"length":3543,"saved":false}
